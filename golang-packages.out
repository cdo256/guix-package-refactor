
(define-module (gnu packages golang)


    (name "go")
    ;; The C-language bootstrap of Go:
    ;; https://golang.org/doc/install/source#go14
    (outputs '("out"










     `(("tzdata" ,tzdata)
     (list pkg-config which net-base perl))

    (synopsis "Compiler and libraries for Go, a statically-typed language")
    (description "Go, also commonly referred to as golang, is an imperative
programming language designed primarily for systems programming.  Go is a
compiled, statically typed language in the tradition of C and C++, but adds
garbage collection, various safety features, and concurrent programming features
in the style of communicating sequential processes (@dfn{CSP}).")
    (supported-systems '("x86_64-linux" "i686-linux" "armhf-linux" "aarch64-linux"))

    (inherit go-1.4)
    (name "go")
     (origin













    (supported-systems (fold delete %supported-systems

    (inherit go-1.14)
    (name "go")
     (origin
     (substitute-keyword-arguments









     `(("go-fix-script-tests.patch" ,(search-patch "go-fix-script-tests.patch"))

(define %go-1.17-arm-micro-architectures
  (list "armv5" "armv6" "armv7"))

(define %go-1.17-powerpc64le-micro-architectures
  (list "power8" "power9"))

    (inherit go-1.16)
    (name "go")
     (origin
    (outputs '("out" "tests")) ; 'tests' contains distribution tests.







    (properties
     `((compiler-cpu-architectures

(define %go-1.18-x86_64-micro-architectures
  (list "x86_64-v1" "x86_64-v2" "x86_64-v3" "x86_64-v4"))

    (inherit go-1.17)
    (name "go")
     (origin
    (properties
     `((compiler-cpu-architectures

    (inherit go-1.18)
    (name "go")
     (origin

    (inherit go-1.19)
    (name "go")
     ;; Go 1.20 and later requires Go 1.17 as the bootstrap toolchain.
     ;; See 'src/cmd/dist/notgo117.go' in the source code distribution,
     ;; as well as the upstream discussion of this topic:
     ;; https://go.dev/issue/44505

    (inherit go-1.20)
    (name "go")










(define make-go-std
  (mlambdaq (go)
    "Return a package which builds the standard library for Go compiler GO."

(export make-go-std)


  (let ((commit "0aa6226582efb8e563540ec1d3c5cfcd19200474")
technology.  The purpose of this technology is to change the characteristics of
network traffic so that it is not identified and subsequently blocked by network
filtering devices.")

    (name "go-github-com-agext-levenshtein")
     (origin
    (synopsis "Calculating the Levenshtein distance between two strings in Go")
    (description
     "Package levenshtein implements distance and similarity metrics for
strings, based on the Levenshtein measure.")

    (name "go-github-com-apparentlymart-go-textseg-v13")
     (origin
     (list ruby))
    (synopsis "Go implementation of Unicode Text Segmentation")
    (description
     "This package provides an implementation of the Unicode Text Segmentation
specification for Go.  Specifically, it currently includes only the grapheme
cluster segmentation algorithm.")
    ;; Project is released under Expat terms.  Some parts use Unicode and

    (inherit go-github-com-apparentlymart-go-textseg-v13)
    (name "go-github-com-apparentlymart-go-textseg-autoversion")

  (let ((commit "a322e24d96313ab405dec28ad5711f036c6d25a3")
functionality for functions that may fail.  It includes various customizable
retry strategies, such as fixed delay, backoff delay, and random delay.")

    (name "go-github-com-operatorfoundation-shapeshifter-transports")
     (origin
     (list go-github-com-stretchr-testify))
     (list go-github-com-aead-chacha20
    (synopsis "Go implementation of Pluggable Transports")
    (description "Shapeshifter-Transports is a set of Pluggable Transports
implementing the Go API from the Pluggable Transports 2.0 specification.
Each transport implements a different method of shapeshifting network traffic.
The goal is for application traffic to be sent over the network in a shapeshifted
form that bypasses network filtering, allowing the application to work on
networks where it would otherwise be blocked or heavily throttled.")

  (let ((commit "915cf5413cdef5370ae3f953f8eb4cd9ac176d5c")

  (let ((commit "245c9e0234cb2ad542483a336324e982f1a22934")

    (name "go-github-com-jcmturner-gofork")
    (synopsis "Modified Go standard library packages")
    (description
     "This repository contains modified Go standard library packages for use as work
arounds until issues are addressed in the official distribution.")

    (name "go-github-com-jcmturner-rpc")
     (list go-golang-org-x-net go-github-com-stretchr-testify))
    (synopsis "Remote Procedure Call libraries")
    (description
     "This package provides a partial Go implementation of the Remote Call
Procedure libraries, presented in
@@url{http://pubs.opengroup.org/onlinepubs/9629399/,CDE 1.1: Remote Procedure
Call}.")

    (inherit go-github-com-jcmturner-rpc)
    (name "go-github-com-jcmturner-rpc-v2-ndr")

    (inherit go-github-com-jcmturner-rpc)
    (name "go-github-com-jcmturner-rpc-v2-mstypes")

    (name "go-github-com-kataras-golog")
     (origin
     (list go-github-com-kataras-pio))
    (synopsis "Logging foundation for Go applications")
    (description "GoLog is a level-based logger written in Go.")

    (name "go-github-com-kataras-pio")
     (origin
    (synopsis "Pill for Input/Output")
    (description "PIO is a low-level package that provides a way to centralize
different output targets.  Supports colors and text decoration to all popular
terminals.")

    (name "go-github-com-kortschak-utter")
    (synopsis "Deep pretty printer")
    (description
     "This package implements a deep pretty printer for Go data structures to
aid data snapshotting.")

    (name "go-github-com-leonelquinteros-gotext")
    (synopsis "GNU gettext utilities in Go")
    (description "This package implements GNU gettext utilities in Go.  It features:
@itemize
@item Implements GNU gettext support in native Go.
@item Complete support for PO files including:
@item Support for MO files.
@item Thread-safe: This package is safe for concurrent use across multiple
goroutines.
@item It works with UTF-8 encoding as it's the default for Go language.
@item Unit tests available.
@item Language codes are automatically simplified from the form en_UK to en if
the first isn't available.
@item Ready to use inside Go templates.
@item Objects are serializable to []byte to store them in cache.
@item Support for Go Modules.
@end itemize")

    (name "go-github-com-pkg-xattr")
    (synopsis "Support for extended file system attributes")
    (description
     "Package xattr provides support for extended attributes on Linux, Darwin and
FreeBSD.  Extended attributes are name:value pairs permanently associated with
files or directories.  They are similar to the environment strings associated with
a process.  An attribute may be defined or undefined.  If defined, its value may
be empty or non-empty.  You can find more details here:
@@url{https://en.wikipedia.org/wiki/Extended_file_attributes,
https://en.wikipedia.org/wiki/Extended_file_attributes}
.")

    (name "go-github-com-schachmat-ingo")
    (synopsis "Go library to persist flags in a INI-like configuration file")
    (description
configuration file.")

  (let ((commit "52f3993e8d6d2629f18e7b7383b7f54a3d3f1d1f")

  (let ((commit "d7c72925c6568d60d361757bb9f2d252dcca745c")

    (name "go-github-com-operatorfoundation-monolith-go")
     (origin
     (list go-github-com-deckarep-golang-set))
    (synopsis "Byte sequences library")
    (description "Monolith-Go is a Go library for working with byte sequences.")

  (let ((commit "298b63a544303a239753d04314aada5bdbad7e4a")
functionality for functions that may fail.  It includes various customizable
retry strategies, such as fixed delay, backoff delay, and random delay.")

    (name "go-github-com-deckarep-golang-set")
     (origin
    (synopsis "Set type for Go")
    (description "Set is the set collection for the Go language.")

  (let ((commit "1454fab16a0642638feb0ae98c41f79eccb2a20a")
lists (Apple XML, Apple Binary, OpenStep, and GNUStep) from/to arbitrary Go
types.")

    (name "go-github-com-bitly-go-hostpool")
    (synopsis "Pool among multiple hosts from Golang")
    (description
     "This package provides a Go package to intelligently and flexibly pool among
multiple hosts from your Go application.  Host selection can operate in round
robin or epsilon greedy mode, and unresponsive hosts are avoided.")

    (name "go-github-com-bitly-timer-metrics")
    (synopsis "Capture timings and enable periodic metrics every @var{n} events")
    (description
     "This package provides an efficient way to capture timing information and
periodically output metrics")

    (name "go-github-com-blanu-dust")
     (origin
     (list go-github-com-operatorfoundation-ed25519
    (synopsis "Censorship-resistant internet transport protocol")
    (description "Dust is an Internet protocol designed to resist a number of
attacks currently in active use to censor Internet communication.  While
adherence to the theoretical maxims of cryptographic security is observed where
possible, the focus of Dust is on real solutions to real attacks.")
     (list

    (name "go-github-com-op-go-logging")
     (origin
    (synopsis "Go logging library")
    (description "Go-Logging implements a logging infrastructure for Go.  Its
output format is customizable and supports different logging backends like
syslog, file and memory.  Multiple backends can be utilized with different log
levels per backend and logger.")

    (name "go-github-com-operatorfoundation-shapeshifter-ipc")
     (origin
    (synopsis "Go implementation of the Pluggable Transports IPC protocol")
    (description "Shapeshifter-IPC is a library for Go implementing the IPC
protocol from the Pluggable Transports 2.0 specification.")

    (name "go-github-com-operatorfoundation-obfs4")
     (origin
     (list go-github-com-dchest-siphash
    (synopsis "Network obfourscator to scramble network traffic")
    (description "Obfs4 is a look-like nothing obfuscation protocol that
incorporates ideas and concepts from Philipp Winter's ScrambleSuit protocol.
The notable differences between ScrambleSuit and obfs4 are:
@itemize
@item The handshake always does a full key exchange (no such thing as a Session
Ticket Handshake).
@item The handshake uses the Tor Project's ntor handshake with public keys
obfuscated via the Elligator 2 mapping.
@item The link layer encryption uses NaCl secret boxes (Poly1305/XSalsa20).
@end itemize")

  (let ((commit "19f41278d0c9251d64e0ee29f37d51e87a24a97b")
the golang proxy package which connects through a TURN relay.  It provides
parsing and encoding support for STUN and TURN protocols.")

    (name "go-github-com-flopp-go-findfont")
    (synopsis "go-findfont")
    (description
     "This package provides a platform-agnostic Go library to locate
TrueType font files in your system's user and system font directories.")

    (name "go-github-com-phpdave11-gofpdi")
     (list
    (synopsis "PDF document importer")
    (description
     "gofpdi allows you to import an existing PDF into a new PDF.")

    (name "go-github-com-signintech-gopdf")
    (synopsis "Generating PDF documents")
    (description "gopdf is a Go library for generating PDF documents.")

    (name "go-github-com-wraparound-wrap")
     (list
    (synopsis "Format Fountain screenplays")
    (description
     "Wrap is a command line tool that is able to convert Fountain files into a
correctly formatted screen- or stageplay as an HTML or a PDF.  It supports
standard Fountain, but also has some custom syntax extensions such as
translated keywords and acts.")

    (name "go-gitlab-torproject-org-tpo-anti-censorship-pluggable-transports-goptlib")
     (origin
    (synopsis "Go pluggable transports library")
    (description "GoPtLib is a library for writing Tor pluggable transports in
Go.")

    (name "go-gitlab-torproject-org-tpo-anti-censorship-pluggable-transports-lyrebird")
     (list go-filippo-io-edwards25519
    (synopsis "Look-like nothing obfuscation protocol")
    (description "This is a look-like nothing obfuscation protocol that
incorporates ideas and concepts from Philipp Winter's ScrambleSuit protocol.")

    (name "go-github-com-sevlyar-go-daemon")
     (origin
     (list go-golang-org-x-sys))
    (synopsis "Library for writing system daemons")
    (description "Go-Daemon is a library for writing system daemons in Go.")

  (let ((commit "91aafc93ba19d1988cff338c1929d35b6c6f5b50")
to list and manipulate processes in a safe way.")

  (let ((commit "4d2ce95ae600ee04eeb020ee0997aabb82752210")
management interface.  It can be used to monitor and control an OpenVPN process
running with its management port enabled.")

  (let ((commit "00ed301c8e9ae79e82878c6361c709983ac5dd2c")

    (name "go-github-com-dchest-siphash")
     (origin
    (synopsis "Go library for pseudorandom functions")
    (description "SipHash is a family of pseudorandom functions (PRFs) optimized
for speed on short messages.")

    (name "go-github-com-rakyll-statik")
     (origin
    (synopsis "Embed files into a Go executable")
    (description "Statik allows you to embed a directory of static files into
your Go binary to be later served from an http.FileSystem.")

  (let ((commit "063c3725f436e7fba0c8f588547bee21ffec7ac5")
@code{io.Reader} and @code{io.Writer} that draws progress bars.  The primary use
case for these are for command-line applications but alternate progress bar
writers can be supplied for alternate environments.")

    (name "go-github-com-miolini-datacounter")
    (synopsis "Counters for Go readers and writers")
    (description
     "The datacounter package provides counters for Go readers and writers.")

    (name "go-github-com-emersion-go-textwrapper")
    (synopsis "Text-wrapping writer for Go")
    (description
     "The textwrapper package provides a writer that wraps long text lines to
a specified length.")

  (let ((commit "e2df936ddd6050d30dd90c7214c02b5019c42f06")
Netscape/Mozilla's old-style cookie files.  It also implements a simple cookie
jar struct to manage the cookies added to the cookie jar.")

    (name "go-github-com-gizak-termui")
     (origin
     (list go-github-com-mattn-go-runewidth
    (synopsis "Terminal dashboard widget Go library")
    (description
     "The termui Go library draws customizable dashboard widgets in a text
terminal.  It includes several common widgets: lists, trees, tables and tabs,
but also more complex items such as (stacked) bar and pie charts, scatter plots,
gauges, and even images and a canvas for drawing `high resolution' braille dots.

You can also easily create new custom widgets.  Widgets can be coloured and
styled and positioned absolutely or relatively.  They respond to keyboard,
mouse, and terminal resizing events.")

    (name "go-github-com-golangplus-fmt")
    (synopsis "Additions to Go's standard @code{fmt} package")
    (description "This package provides additions to Go's stdlib @code{fmt}.")

    (name "go-github-com-mitchellh-go-wordwrap")
     (origin
     (list go-gopkg-in-yaml-v2))
    (synopsis "Go library for word-wrapping strings")
    (description
     "This Go library automatically wraps words onto multiple lines.  It's
primary goal is to format command-line output, but of course word wrapping is a
generally useful thing to do.")

  (let ((commit "45d19169413a019e4e2be69629dde5c7d92f8706")

    (name "go-github-com-daviddengcn-go-colortext")
     (list go-github-com-golangplus-testing))
    (synopsis "Change the color of console text and background")
    (description
     "This is a package to change the color of the text and background in the
console, working both under Windows and other systems.

Under Windows, the console APIs are used.  Otherwise, ANSI texts are output.")

    (name "go-github-com-leodido-go-urn")
     (origin
     (list go-github-com-stretchr-testify))
    (synopsis "Parser for uniform resource names as seen on RFC 2141")
    (description
     "This package implements a parser for uniform resource names (URN) as
specified by @uref{https://tools.ietf.org/html/rfc2141, IETF RFC 2141}.")

    (name "go-github.com-jessevdk-go-flags")
     (list go-golang-org-x-sys))
    (synopsis "Go library for parsing command line arguments")
    (description
     "The @code{flags} package provides a command line option parser.  The
functionality is similar to the go builtin @code{flag} package, but
@code{flags} provides more options and uses reflection to provide a succinct
way of specifying command line options.")

    (name "go-github-com-go-playground-locales")
     (origin
    (synopsis "Set of locales generated from the CLDR Unicode Project")
    (description
     "This package provides a set of locales generated from the
@uref{http://cldr.unicode.org/, Unicode CLDR Project} which can be used
independently or within an internalization (i18n) package.  Its currently
implemented features include

@itemize
@item Rules generated from the CLDR data, v31.0.3
@item Contains Cardinal, Ordinal and Range Plural Rules
@item Contains Month, Weekday and Timezone translations built in
@item Contains Date & Time formatting functions
@item Contains Number, Currency, Accounting and Percent formatting functions
@item Supports the \"Gregorian\" calendar only
@end itemize")

    (name "go-github-com-go-playground-universal-translator")
     (origin
     (list go-github-com-go-playground-locales))
    (synopsis "Translator using Unicode CLDR data and pluralization rules")
    (description
     "This package offers an Internalization Translator for Go using
@uref{http://cldr.unicode.org/, Unicode CLDR Project} data and pluralization
rules.  Its currently implemented features include

@itemize
@item Rules generated from the CLDR data, v30.0.3
@item Contains Cardinal, Ordinal and Range Plural Rules
@item Contains Month, Weekday and Timezone translations built in
@item Contains Date & Time formatting functions
@item Contains Number, Currency, Accounting and Percent formatting functions
@item Supports the \"Gregorian\" calendar only
@item Support loading translations from files
@item Exporting translations to file(s), mainly for getting them
professionally translated
@end itemize")

    (name "go-gopkg-in-go-playground-validator-v9")
     (origin
     (list go-gopkg-in-go-playground-assert-v1))
     (list go-github-com-go-playground-universal-translator
    (synopsis "Validator for structs and individual fields based on tags")
    (description
     "This package implements value validations for structs and individual
fields based on tags.  It has the following unique features:

@itemize
@item Cross Field and Cross Struct validations by using validation tags or
custom validators
@item Slice, Array and Map diving, which allows any or all levels of a
multidimensional field to be validated
@item Ability to dive into both map keys and values for validation
@item Handles type interface by determining it's underlying type prior to validation
@item Handles custom field types such as sql driver
@uref{https://golang.org/src/database/sql/driver/types.go?s=1210:1293#L29,
Valuer}
@item Alias validation tags, which allows for mapping of several validations
to a single tag for easier defining of validations on structs
@item Extraction of custom defined Field Name e.g. can specify to extract the
JSON name while validating and have it available in the resulting FieldError
@item Customizable i18n aware error messages.
@item Default validator for the @uref{https://github.com/gin-gonic/gin, gin}
web framework
@end itemize")

  (let ((commit "c8f9f1eb869135f07378e7e3c5ec7a005f806c73")
sunset times from geographical coordinates and a date.")

    (name "go-github-com-nsqio-go-diskqueue")
    (synopsis "Go package providing a file system backed FIFO queue")
    (description
     "The @code{diskqueue} Go package provides a file system backed FIFO
queue.")

    (name "go-github-com-nsqio-go-nsq")
    (synopsis "Consumer/producer library for NSQ")
    (description
     "The @code{nsq} Go module provides a high-level @code{Consumer} and
@code{Producer} types as well as low-level functions to communicate over the
NSQ protocol @url{https://nsq.io/}.")

  (let ((commit "fe3043f73e415eb82727701d10f2fb40f87675e9")
Hebrew letters.")

  (let ((commit "d42e881860cfc9e8249fc79f268091c3c4d36b0d")
and Gregorian dates, and generation of lists of Jewish holidays for
a given year.  Shabbat and holiday candle lighting and havdalah times
are approximated based on location.

Torah readings, Daf Yomi, and counting of the Omer can also be
specified.  Algorithms are included to calculate yahrzeits, birthdays,
and anniversaries.")

  (let ((commit "d5d1b5820637886def9eef33e03a27a9f166942c")
termination.")

    (inherit go-gopkg.in-tomb.v2)
    (name "go-gopkg-in-tomb-v1")

    (name "go-gopkg-in-natefinch-lumberjack.v2")
     (origin
     `(("github.com/burntsush/toml" ,go-github-com-burntsushi-toml)
    (synopsis "Rolling logger for Go")
    (description
     "Lumberjack is a Go package for writing logs to rolling files.")

    (name "go-github.com-jtolds-gls")
     (list
    (synopsis "@code{gls} provides Goroutine local storage")
    (description
     "The @code{gls} package provides a way to store a retrieve values
per-goroutine.")

    (name "go-github-com-saracen-walker")
     (origin
     (list go-golang-org-x-sync))
    (synopsis "Faster, parallel version of Go's filepath.Walk")
    (description "The @code{walker} function is a faster, parallel version, of
@code{filepath.Walk}")))

    (name "go-github-com-tdewolff-hasher")
     (list go-github-com-cespare-mph
    (synopsis "Go known-keys fast-lookup map generator")
    (description
     "Hasher is a tool to automate the creation of methods and tables for a
@code{string} to @code{uint32} mapper.")

    (name "go-github-com-tj-docopt")
    (synopsis "Go implementation of docopt")
    (description
     "This library allows the user to define a command-line interface from a
program's help message rather than specifying it programmatically with
command-line parsers.")

    (name "go-github-com-hashicorp-hcl")
     (origin
     (list go-github-com-davecgh-go-spew))
    (synopsis "Go implementation of HashiCorp Configuration Language V1")
    (description
     "This package contains the main implementation of the @acronym{HCL,
HashiCorp Configuration Language}.  HCL is designed to be a language for
expressing configuration which is easy for both humans and machines to read.")

    (name "go-github-com-hashicorp-hcl-v2")
     (origin
     (list go-github-com-davecgh-go-spew))
     (list go-github-com-agext-levenshtein go-github-com-mitchellh-go-wordwrap
    (synopsis "Go implementation of HashiCorp Configuration Language V2")
    (description
     "This package contains the main implementation of the @acronym{HCL,
HashiCorp Configuration Language}.  HCL is designed to be a language for
expressing configuration which is easy for both humans and machines to read.")

    (name "go-golang-org-x-exp")
    (synopsis "Experimental and deprecated Go packages")
    (description
     "This subrepository holds experimental and deprecated (in the @code{old}
directory) packages.")

    (name "go-golang-org-x-tools")
     (origin
     (list
    (synopsis "Tools that support the Go programming language")
    (description "This package provides miscellaneous tools that support the
Go programming language.")

    (name "go-golang-org-x-crypto")
     (list go-golang-org-x-sys))
    (synopsis "Supplementary cryptographic libraries in Go")
    (description "This package provides supplementary cryptographic libraries
for the Go language.")

    (name "govulncheck")
    (synopsis "Go Vulnerability Management")
    (description
     "This repository contains packages for accessing and analyzing data from
the @url{https://vuln.go.dev,Go Vulnerability Database}.")

    (inherit govulncheck)
    (name "go-golang-org-x-vuln")

    (name "gopls")
    (synopsis "Official language server for the Go language")
    (description
     "Pronounced ``Go please'', this is the official Go language server
developed by the Go team.  It provides IDE features to any LSP-compatible
editor.")

  (let ((commit "8e0e7d8d38f2b6d21d742845570dde2902d06a1d")

  (let ((commit "b225e7ca6dde1ef5a5ae5ce922861bda011cfabd")

    (inherit go-golang-org-x-net)
    (name "go-golang.org-x-net-html")
    (synopsis "HTML5-compliant tokenizer and parser")
    (description
     "This package provides an HTML5-compliant tokenizer and parser.")

  (let ((commit "58c23975cae11f062d4b3b0c143fe248faac195d")
processing.")

  (let ((commit "8fcdb60fdcc0539c5e357b2308249e4e752147f1")
to the ones provided by the language and “sync” and “sync/atomic”
packages.")

  (let ((commit "ca59edaa5a761e1d0ea91d6c07b063f85ef24f78")
support for low-level interaction with the operating system.")

    (name "go-golang-org-x-text")
    (synopsis "Supplemental Go text processing libraries")
    (description "This package provides supplemental Go libraries for text
    processing.")

  (let ((commit "9d24e82272b4f38b78bc8cff74fa936d31ccd8ef")
time.")

  (let ((commit "0f29369cfe4552d0e4bcddc57cc75f4d7e672a33")
 spec in Go.")

  (let ((commit "5ec99f83aff198f5fbd629d6c8d8eb38a04218ca")

  (let ((commit "7c05a442b7c1d1a107879b4a090bb5a38d3774a1")
with Go module mechanics.  That is, it is for direct manipulation of Go modules
themselves.

The specific case of loading packages should still be done by invoking the
@command{go} command, which remains the single point of truth for package
loading algorithms.")

    (name "go-github-com-burntsushi-toml")
    (synopsis "Toml parser and encoder for Go")
    (description
     "This package is toml parser and encoder for Go.  The interface
is similar to Go's standard library @code{json} and @code{xml} package.")

    (name "go-github-com-hashicorp-go-uuid")
    (synopsis "Generate UUID-format strings")
    (description
     "This package generates UUID-format strings using high quality bytes.
It is not intended to be RFC compliant, merely to use a well-understood string
representation of a 128-bit value.  It can also parse UUID-format strings into
their component bytes.")

  (let ((commit
constraints")
constraints, and verifying versions against a set of constraints.  It can sort
a collection of versions properly, handles prerelease/beta versions, can
increment versions.")

  (let ((commit
Go.")

    (name "go-github-com-stretchr-objx")
     (origin
     (list
     (list go-github-com-davecgh-go-spew
     (list go-github-com-stretchr-testify-bootstrap))
    (synopsis "Go package for dealing with maps, slices, JSON and other data")
    (description "This package provides a Go library for dealing with maps,
slices, JSON and other data.")

    (name "go-github-com-technoweenie-multipartstreamer")
    (synopsis "MIME multipart format streamer")
    (description
     "This package helps you encode large files in MIME multipart format
without reading the entire content into memory.")

  (let ((commit
optimized for performance yet simple to use.")

    (name "gron")
     (origin
     (let ((import-path "github.com/tomnomnom/gron"))
     `(("github.com/fatih/color" ,go-github-com-fatih-color)
    (synopsis "Transform JSON to make it easier to grep")
    (description
     "This package transforms JSON into discrete assignments to make it easier
to use line-based tools such as grep to search for what you want and see the
absolute \"path\" to it.")

  (let ((commit "60ec3488bfea7cca02b021d106d9911120d25fe9")

  (let ((commit "2ed7198f77395ee9a172878a0a7ab92ab59a2cfd")
information about the resource usage and performance characteristics of running
containers.")

    (name "go-github-com-andybalholm-brotli")
     (origin
    (synopsis "Pure Go Brotli encoder and decoder")
    (description
     "This package is a brotli compressor and decompressor implemented in Go.
It was translated from the reference implementation
(@url{https://github.com/google/brotli,https://github.com/google/brotli}) with
the @code{c2go} tool at
@url{https://github.com/andybalholm/c2go,https://github.com/andybalholm/c2go}.")

  (let ((commit "e3653ace2d63753697e0e5b07b9393971c0bba9d")
@code{clockwork.Clock} interface instead.")

    (name "go-github-com-spf13-afero")
     (origin
     `(("golang.org/x/text" ,go-golang-org-x-text)))
    (synopsis "File system abstraction for Go")
    (description
     "This package provides a file system abstraction for Go.")

    (name "go-github-com-spf13-cast")
     (origin
     (list go-github-com-stretchr-testify))
    (synopsis "Safe and easy casting from one type to another in Go")
    (description "Safe and easy casting from one type to another in Go")

    (name "go-github-com-spf13-cobra")
     (origin
     `(("github.com/spf13/pflag" ,go-github-com-spf13-pflag)))
    (synopsis "Go library for creating CLI applications")
    (description "Cobra is both a library for creating powerful modern CLI
applications as well as a program to generate applications and command files.")

    (name "go-github-com-spf13-jwalterweatherman")
     (origin
     (list go-github-com-stretchr-testify))
    (synopsis "Go logging library")
    (description "Go logging library")

    (name "go-github-com-spf13-pflag")
    (synopsis "Replacement for Go's @code{flag} package")
    (description
     "Pflag is library to replace Go's @code{flag} package.  It implements
POSIX/GNU-style command-line options with double hyphens.  It is is compatible
with the
@uref{https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html,
GNU extensions} to the POSIX recommendations for command-line options.")

    (name "go-github-com-spf13-viper")
     (origin
     `(("github.com/spf13/afero" ,go-github-com-spf13-afero)

     (list go-github-com-stretchr-testify))
    (synopsis "Go configuration with fangs")
    (description
     "Viper is a complete configuration solution for Go applications including
12-Factor apps.  It is designed to work within an application, and can handle
all types of configuration needs and formats.")

    (name "go-github-com-fsnotify-fsnotify")
     (origin
     `(("golang.org/x/sys" ,go-golang-org-x-sys)))
    (synopsis "File system notifications for Go")
    (description "File system notifications for Go")

    (name "go-github-com-nxadm-tail")
    (synopsis "Go implementation of the functionality of @command{tail -f}")
    (description
     "This package provides a Go library for reading from continuously
updating files, like @command{tail -f}.")

    (name "go-github-com-magiconair-properties")
     (origin
    (synopsis "Java properties scanner for Go")
    (description "Java properties scanner for Go")

    (name "go-github-com-pelletier-go-toml")
     (origin
     `(("github.com/BurntSushi/toml" ,go-github-com-burntsushi-toml)
    (synopsis "Go library for the TOML configuration language")
    (description "Go library for the TOML configuration language")

    (name "go-github-com-subosito-gotenv")
     (origin
     (list go-github-com-stretchr-testify))
    (synopsis "Go library for loading environment variables from files")
    (description "Go library for loading environment variables from files")

    (name "go-github-com-sirupsen-logrus")
     (origin
     (list
     (list go-github-com-davecgh-go-spew go-github-com-pmezard-go-difflib
    (synopsis "Structured, pluggable logging for Go")
    (description "Logrus is a structured logger for Go, completely API
compatible with the standard library logger.")

    (name "go-github-com-rifflock-lfshook")
     (list go-github-com-sirupsen-logrus))
    (synopsis "Local File System hook for Logrus logger")
    (description "This package provides a hook for Logrus to write directly to
a file on the file system.  The log levels are dynamic at instantiation of the
hook, so it is capable of logging at some or all levels.")

  (let ((commit "ae77be60afb1dcacde03767a8c37337fad28ac14")
file that is running.  This can be used for upgrading the current executable or
finding resources located relative to the executable file.")

  (let ((commit "0c8eb6d8fff2e2fb884a7bfd23e183fb63c0eff3")
run programs as a service using a variety of supervisors, including systemd,
SysVinit, and more.")

    (name "go-github-com-dgryski-go-metro")
    (synopsis "Go translation of MetroHash")
    (description
     "This package provides a Go translation of the
@url{https://github.com/jandrewrogers/MetroHash, reference C++ code for
MetroHash}, a high quality, high performance hash algorithm.")

    (name "go-github-com-dgryski-go-mph")
     (list go-github-com-dgryski-go-metro))
    (synopsis "Go minimal perfect hash function")
    (description
     "This package implements a hash/displace minimal perfect hash function.")

  (let ((commit "325b0804fef3a66309d962357aac3c2ce3f4d329")
deliver content")
store, and deliver content.  It contains Docker Registry 2.0 and libraries
to interact with distribution components.")

  (let ((commit "3ede32e2033de7505e6500d6c868c2b9ed9f169d")
the Go language.  In particular it provides tools to deal with network address
translation (NAT), proxies, sockets, and transport layer security (TLS).")

    (name "go-github-com-docker-go-units")
    (synopsis "Parse and print size and time units in human-readable format")
    (description
     "@code{go-units} is a library to transform human friendly measurements into
machine friendly values.")

  (let ((commit "7b7a141da84480342357c51838be142bf183b095")
hosting providers, and inside your data center.  It creates servers, installs
Docker on them, then configures the Docker client to talk to them.")

  (let ((commit "f0984319b44273e83de132089ae42b1810f4933b")
Given a cron expression and a time stamp, you can get the next time stamp
which satisfies the cron expression.")

    (name "go-gopkg-in-ini-v1")
     (origin
    (synopsis "Go library for ini files")
    (description "Go library for ini files")

    (name "go-gopkg-in-yaml-v2")
     (list go-gopkg-in-check-v1))
    (synopsis "YAML reader and writer for the Go language")
    (description
     "This package provides a Go library for encode and decode YAML
values.")

    (name "go-gopkg-in-yaml-v3")
     (origin
     (list go-gopkg-in-check-v1))
    (synopsis "YAML reader and writer for the Go language")
    (description
     "This package provides a Go library for encode and decode YAML values.
The yaml package supports most of YAML 1.2, but preserves some behavior from
1.1 for backwards compatibility.")

    (name "go-github-com-matrix-org-gomatrix")
    (synopsis "Golang Matrix client")
    (description "This package provides a Golang Matrix client.")

    (name "go-github-com-mattn-go-isatty")
     (origin
     (list go-golang-org-x-sys))
    (synopsis "Provide @code{isatty} for Golang")
    (description "This package provides @code{isatty}, a Go module that can
tell you whether a file descriptor points to a terminal and the type of the
terminal.")

    (name "go-github-com-mattn-go-colorable")
     (origin
     (list go-github-com-mattn-go-isatty))
    (synopsis "Handle ANSI color escapes on Windows")
    (description "This package provides @code{colorable}, a module that
makes it possible to handle ANSI color escapes on Windows.")

  (let ((commit "a0a44394634f41e4992b173b24f14fecd3318a67")

  (let ((commit "9520e82c474b0a04dd04f8a40959027271bab992")
generate ANSI colored strings.")

  (let ((commit "03fc4642d792b1f2bc5e7343b403cf490f8c501d")
run a Lua virtual machine.")

  (let ((commit "97ce517e7a1fe2407a90c317a9c74b173d396144")
all functions from the Lua string library.  Lua patterns are replaced by Go
regexps.  This breaks compatibility with Lua, but Unicode support breaks it
anyways and Go regexps are more powerful.")

  (let ((commit "d19ef9c409d9817c1e685775e53d361b03eabbc8")
when provided with a valid relative path / alias path, it will return you with
a string of its real absolute path in the system.")

  (let ((commit "883829e1f25fad54015772ea663e69017cf22352")
Damerau-Levenshtein distance.  Takes a string value input from the user.
Looks for an identical word on a list of words, if none is found, look for a
similar word.")

    (name "misspell")
    (synopsis "Correct commonly misspelled English words in source files")
    (description
     "misspell assists with correcting commonly misspelled English words in
source files.  A neutral variety of English is used by default, but a US or UK
locale can be selected.")

    (inherit misspell)
    (name "go-github-com-client9-misspell")

  (let ((commit "22d247e5366095f491cd83edf779ee99a78f5ead")
convenient.  Go structs, slices and maps can be automatically converted to Lua
tables and vice-versa.  The resulting conversion can either be a copy or a
proxy.  In the latter case, any change made to the result will reflect on the
source.

Any Go function can be made available to Lua scripts, without having to write
C-style wrappers.

Luar support cyclic structures (lists, etc.).

User-defined types can be made available to Lua as well: their exported
methods can be called and usual operations such as indexing or arithmetic can
be performed.")

  (let ((commit "8ac61812ea3fa540f3f141a444fcb0dd713cdca4")
values.  This is useful during debugging, to avoid wrapping long output lines
in the terminal.

It provides a function, @code{Formatter}, that can be used with any function
that accepts a format string.  It also provides convenience wrappers for
functions in packages @code{fmt} and @code{log}.")

  (let ((commit "0cdeb13f9b24d2c714feb7e3c63d595cf7121d7d")
and lookup requests.  Browse requests are not supported yet.")

  (let ((commit "6e68349ff94ecea412de7e748cb5eaa26f472777")

    (name "go-github-com-gogo-protobuf")
    (synopsis "Protocol Buffers for Go with Gadgets")
    (description "Gogoprotobuf is a fork of golang/protobuf with extra code
generation features.  This code generation is used to achieve:
@itemize
@item fast marshalling and unmarshalling
@item more canonical Go structures
@item goprotobuf compatibility
@item less typing by optionally generating extra helper code
@item peace of mind by optionally generating test and benchmark code
@item other serialization formats
@end itemize")

  (let ((commit "7e5a55af485341567f98d6847a373eb5ddcdcd43")
that's a lot faster (and only does simple bandwidth metrics).")

    (name "go-github-com-davecgh-go-spew")
     (origin
    (synopsis "Deep pretty printer for Go data structures to aid in debugging")
    (description "Package @command{spew} implements a deep pretty printer
for Go data structures to aid in debugging.

A quick overview of the additional features spew provides over the built-in printing facilities for Go data types are as follows:

@itemize
@item Pointers are dereferenced and followed.
@item Circular data structures are detected and handled properly.
@item Custom Stringer/error interfaces are optionally invoked, including on
unexported types.
@item Custom types which only implement the Stringer/error interfaces via a
pointer receiver are optionally invoked when passing non-pointer variables.
@item Byte arrays and slices are dumped like the hexdump -C command which
includes offsets, byte values in hex, and ASCII output (only when using Dump
style).
@end itemize\n")

  (let ((commit "84c8d2346e9fc8c7b947e243b9c24e6df9fd206a")
provides a default implementation of a subsystem-aware leveled logger
implementing the same interface.")

  (let ((commit "d724c80ecac7b49e4e562d58b2b4f4ee4ed8c312")
trivial @command{big.Int} encoding benchmark results in 6 times faster
encoding and 8 times faster decoding.")

    (name "go-github-com-mreiferson-go-options")
    (synopsis "Go package to structure and resolve options")
    (description
     "The @code{options} Go package resolves configuration values set via
command line flags, config files, and default struct values.")

  ;; NSQ specific fork of github.com/judwhite/go-svc, as Guix go build system
  ;; does not support go.mod with `replace' statement.
  (let ((commit "7a96e00010f68d9436e3de53a70c53f209a0c244")
@url{https://github.com/judwhite/go-svc/raw/master/svc/svc_windows_test.go,here}.")

    (name "go-github-com-spaolacci-murmur3")
     (origin
    (synopsis "Native MurmurHash3 Go implementation")
    (description "Native Go implementation of Austin Appleby's third MurmurHash
revision (aka MurmurHash3).

Reference algorithm has been slightly hacked as to support the streaming mode
required by Go's standard Hash interface.")

    (name "go-github-com-twmb-murmur3")
     (origin
    (synopsis "Native MurmurHash3 Go implementation")
    (description "Native Go implementation of Austin Appleby's third
MurmurHash revision (aka MurmurHash3).

Reference algorithm has been slightly hacked as to support the streaming mode
required by Go's standard Hash interface.")

  (let ((commit "b29f3d97e3a2fb8b29c5d04290e6cb5c5018004b")

  (let ((commit "a10ff6e75dae3c868023867e8caa534a04bdc624")
statistics for wrapped connections.")

  (let ((commit "ae18d6b8b3205b561c79e8e5f69bff09736185f4")
directory without the use of @command{cgo}, so the library can be used in
cross-compilation environments.

Usage is simple, just call homedir.Dir() to get the home directory for a user,
and homedir.Expand() to expand the @command{~} in a path to the home
directory.

Why not just use @command{os/user}?  The built-in @command{os/user} package
requires cgo on Darwin systems.  This means that any Go code that uses that
package cannot cross compile.  But 99% of the time the use for
@command{os/user} is just to retrieve the home directory, which we can do for
the current user without cgo.  This library does that, enabling
cross-compilation.")

    (name "go-github-com-mitchellh-mapstructure")
     (origin
    (synopsis "Go library for decoding generic map values")
    (description "Go library for decoding generic map values")

    (name "go-github-com-mitchellh-reflectwalk")
    (synopsis "Walk a value in Go using reflection")
    (description "reflectwalk is a Go library for \"walking\" a value in Go
using reflection, in the same way a directory tree can be \"walked\" on the
file system.  Walking a complex structure can allow you to do manipulations on
unknown structures such as those decoded from JSON.")

    (name "go-github-com-mitchellh-copystructure")
     (origin
     (list go-github-com-mitchellh-reflectwalk))
    (synopsis "Go library for decoding deep copying values")
    (description "@code{copystructure} is a Go library for deep copying values
in Go.

This allows you to copy Go values that may contain reference values such as
maps, slices, or pointers, and copy their data as well instead of just their
references.")

  (let ((commit "fe1c46f8be5af4aff4db286e08839295bd922efb")
does the following:

@itemize
@item Support any standard network protocols.
@item Self-describe (include protocols).
@item Have a binary packed format.
@item Have a nice string representation.
@item Encapsulate well.
@end itemize\n")

  (let ((commit "1cb9a0e8a6de3c8a10f6cee60d01d793603c4f7e")
common functions in stdlib's @command{net} package.  This means wrappers of
standard net symbols like @command{net.Dial} and @command{net.Listen}, as well
as conversion to and from @command{net.Addr}.")

  (let ((commit "8c6c8ba81d5c71fd69c0f48dbde4b2fb422b6dfc")

  (let ((commit "525f6e181f062064d83887ed2530e3b1ba0bc95a")

    (name "go-github-com-urfave-cli")
     (origin
     (list go-github-com-go-md2man))
    (synopsis "Simple, fast, and fun package for building command line apps in Go")
    (description "@command{cli} is a simple, fast, and fun package for
building command line apps in Go.  The goal is to enable developers to write
fast and distributable command line applications in an expressive way.")

    (inherit go-github-com-urfave-cli)
    (name "go-github-com-urfave-cli-v2")
     (origin

    (name "go-github-com-go-md2man")
     (origin
     (list go-github-com-russross-blackfriday))
    (synopsis "Convert markdown into roff")
    (description "Go-md2man is a Go program that converts markdown to roff for
the purpose of building man pages.")

  (let ((commit "f0c862dd687a9d9a7e15b3cd7cb3fd3e81cdd5ef")
package can parse netrc files, make changes to them, and then serialize them
back to netrc format, while preserving any whitespace that was present in the
source file.")

    (name "go-github-com-russross-blackfriday")
     (origin
     (list go-github-com-shurcool-sanitized-anchor-name))
     (list go-github-com-pmezard-go-difflib))
    (synopsis "Markdown processor in Go")
    (description "Blackfriday is a Markdown processor in Go.")

  (let ((commit "787959303086f44a8c361240dfac53d3e9d53ed2")
messages depending on environment variables.  It is very much inspired by git's
GIT_TRACE mechanism.")

    (name "go-github-com-shurcool-sanitized-anchor-name")
     (origin
    (synopsis "Create sanitized anchor names")
    (description "This package provides a Go program for creating sanitized
anchor names.")

    (name "go-github-com-pmezard-go-difflib")
    (synopsis "Go diff implementation")
    (description "This package provides unified and context-aware diffs in Go.")

  (let ((commit "f3e57218a75b913eff88d49a52c1debf9684ea04")

  (let ((commit "206f8f13aae1697a6fc1f4a55799faf955971fc5")
have super fancy logs.")

  (let ((commit "1455def202f6e05b95cc7bfc7e8ae67ae5141eba")

  (let ((commit "4cce6d1a66f7bc8dc730eab85cab6af1b801abed")
format in Go.")

    (name "go-github-com-kr-pretty")
     (list go-github-com-kr-text))
    (synopsis "Pretty printer for Go values")
    (description "This package provides a pretty printer for Go values.")

    (name "go-github-com-kylelemons-godebug")
     (origin
    (synopsis "Pretty printer for Go values")
    (description
     "This package will pretty print a compact representation of a Go data
structure.  It can also produce a much more verbose, one-item-per-line
representation suitable for computing diffs.")

    (name "go-github-com-kr-text")
    (synopsis "Text formatting in Go")
    (description "This package provides a text formatting functions in Go.")

    (name "go-github-com-go-sql-driver-mysql")
     (origin
    (synopsis "MySQL driver for golang")
    (description
     "This is a pure Go implementation of the MySQL API, compatible with
golang's database/sql package.")

    (name "go-github-com-syndtr-goleveldb-leveldb")
    (synopsis "LevelDB implementation in Go")
    (description
     "This package provides a Go implementation of the LevelDB key/value
storage system.")

    (name "go-github-com-lucasb-eyer-go-colorful")
    (synopsis "Library for playing with colors in Go")
    (description
     "The colorful package provides a library for using colors in Go.
It stores colors in RGB and provides methods for converting these to
various color spaces.")

  (deprecated-package "go-golang-org-colorful" go-github-com-lucasb-eyer-go-colorful))

    (name "go-github-com-gdamore-encoding")
     (origin
     (list go-golang-org-x-text))
    (synopsis "Provide encodings missing from Go")
    (description "This package provides useful encodings not included in the
standard @code{Text} package, including some for dealing with I/O streams from
non-UTF-friendly sources.")

    (name "go-github-com-cention-sany-utf7")
    (synopsis "UTF-7 for Go")
    (description
     "The utf7 package provides support for the obsolete UTF-7 text
encoding in Go.")

    (name "go-github-com-cespare-mph")
    (synopsis "Minimal perfect hashing in Go")
    (description
     "@code{mph} is a Go package that implements a minimal perfect hash table
over strings.")

  (let ((commit "aaadc574a6ed8dc3abe56036ca130dcee1ee6b6e")
terminfo capability strings to avoid hard-coding escape strings for
formatting.  It also favors portability, and includes support for all POSIX
systems.")


    (inherit go-github-com-gdamore-tcell-v2)
    (name "go-github-com-gdamore-tcell")
     (origin

    (name "go-git-sr-ht-rockorager-tcell-term")
     (list go-golang-org-x-sys
    (synopsis "Terminal widget for @code{tcell}")
    (description
     "This package provides a virtual terminal widget for the @code{tcell}
Go library.")

    (name "go-github-com-rivo-tview")
    (synopsis "Rich Interactive Widgets for Terminal UIs")
    (description
     "The tview package implements rich widgets for terminal based user
interfaces.  The widgets provided with this package are useful for data
exploration and data entry.")

    (name "go-github-com-xo-terminfo")
    (synopsis "Read the terminfo database in Go")
    (description
     "The terminfo package implements terminfo database reading for Go.")

  (let ((commit "2444a32a19f450fabaa0bb3e96a703f15d9a97d2")




the @code{cpan} module @code{Parse::CommandLine}.")

  (let ((commit "a6e239ea1c69bff1cfdb20c4b73dadf52f784b6a")
locks.  These appear to be especially useful for synchronizing access to
session based information in web applications.

The common use case is to use the package level functions, which use a package
level set of locks (safe to use from multiple goroutines
simultaneously).  However, you may also create a new separate set of locks
test.

All locks are implemented with read-write mutexes.  To use them like a regular
mutex, simply ignore the RLock/RUnlock functions.")

    (name "go-github-com-cheekybits-genny")
     (list go-golang-org-x-tools))
    (synopsis "Generics for Go")
    (description "This package provides @code{genny}, a Go language
implementation of generics.")

    (name "go-github-com-quic-go-qpack")
     (origin
     (list
    (synopsis "Minimal QPACK (RFC 9204) implementation for Go")
    (description
     "A minimal QPACK (RFC 9204) implementation in Go.  It is minimal in the sense
that it doesn't use the dynamic table at all, but just the static table and (Huffman
encoded) string literals.  Wherever possible, it reuses code from the
@url{https://github.com/golang/net/tree/master/http2/hpack, HPACK implementation in
the Go standard library}.")

    (name "go-github-com-quic-go-quic-go")
     (list go-github-com-quic-go-qtls-go1-20
    (synopsis "QUIC in Go")
    (description "This package provides a Go language implementation of the QUIC
network protocol.")

  (deprecated-package "go-github-com-lucas-clemente-quic-go" go-github-com-quic-go-quic-go))

    (name "go-github-com-lunixbochs-vtclean")
     (origin
    (synopsis "Filter out terminal escape sequences")
    (description
     "The @code{vtclean} provides the @command{vtclean} command and a library
designed to clean up raw terminal output by stripping escape sequences,
optionally preserving color.")

    (name "go-github-com-pkg-errors")
     (list
    (synopsis "Go error handling primitives")
    (description "This package provides @code{error}, which offers simple
error handling primitives in Go.")

    (name "go-github-com-maruel-panicparse")
    (synopsis "Toolkit for parsing Go stack traces")
    (description "This package provides a toolkit for parsing Go language panic
stack traces.  It simplifies the traces to make salient information more visible
and aid debugging.")

    (name "go-github-com-robfig-cron")
     (origin
    (synopsis "Cron library for Go")
    (description "This package provides a cron library for Go.  It implements
a cron spec parser and job runner.")

  (let ((commit "47ef3260b6bf6ead847e7c8fc4101b33c365e399")
on running processes and system utilization (CPU, memory, disks, network,
sensors).")

  (let ((commit "cbb64ac3d964b81592e64f957ad53df015803288")
     (name "go-github-com-danwakefield-fnmatch")
     (synopsis "Updated clone of kballards golang fnmatch gist")
     (description "This package provides an updated clone of kballards golang
fnmatch gist (https://gist.github.com/kballard/272720).")

  (let ((commit "b7d861da381071e5d3701e428528d1bfe276e78f")

    (name "go-github-com-emersion-go-imap")
    (synopsis "IMAP4rev1 library written in Go")
    (description
     "This package provides an IMAP4rev1 library written in Go.  It
can be used to build IMAP clients and servers.")

    (name "go-github-com-emersion-go-imap-sortthread")
    (synopsis "Sorting and threading of messages for the imap package")
    (description
     "The sortthread package implements message sorting and threading for
@code{go-github-com-emersion-go-imap}.")

    (name "go-github-com-emersion-go-smtp")
    (synopsis "SMTP implementation for Go")
    (description
     "This package implements the Simple Mail Transfer Protocol as
defined by RFC 5321.")

  (let ((commit "0b9dcfb154ac3d7515b08bc2691a0332800edfe9")

  (let ((commit "2704abd7050ed7f2143753554ee23affdf847bd9")

    (name "go-github-com-emersion-go-maildir")
    (synopsis "Maildir interface for Go")
    (description
     "This package provides an interface to mailboxes in the Maildir
format.")

    (name "go-github-com-emersion-go-milter")
    (synopsis "Milter mail filters in Go")
    (description
     "This package provides an interface for implementing milter mail
filters for Go.")

    (name "go-github-com-emersion-go-msgauth")
    (synopsis "Email authentication for Go")
    (description
     "This package provides a Go library for authenticating emails.")

    (name "go-github-com-emersion-go-mbox")
    (synopsis "Go library for handling @code{mbox} files")
    (description
     "This package provides a library for parsing and formatting
@code{mbox} files.")

    (name "go-github-com-fatih-color")
     (list go-github-com-mattn-go-colorable
    (synopsis "Print colored text in Go")
    (description "This package provides an ANSI color package to output
colorized or SGR defined output to the standard output.")

    (name "go-github-com-google-go-cmp-cmp")
    (synopsis "Determine equality of values in Go")
    (description
     "This package is intended to be a more powerful and safer
alternative to @@code{reflect.DeepEqual} for comparing whether two values are
semantically equal.")

    (name "go-github-com-google-uuid")
    (synopsis "Generate and inspect UUIDs based on RFC 4122 and DCE 1.1")
    (description "The uuid package generates and inspects UUIDs based on RFC
4122 and DCE 1.1: Authentication and Security Services.")

    (name "go-github-com-google-gopacket")
    (synopsis "Packet processing capabilities library")
    (description
     "This package provides packet processing capabilities for Go.")

  (let ((commit "fc88cf888a3fa99ecc23d1efc1a44284268457d3")
attributes.  It also contains some convenience functions for colors, SSH to
and from termios translations, readCh, reading passwords, etc.")

  (let ((commit "992e8021cf787c100d55520d5c906e01536c0a19") ;fix format in tests
into URL query parameters.")

    (name "go-github-com-google-renameio")
    (synopsis "Atomically create or replace a file or symbolic link")
    (description "@code{renameio} Go package provides a way to atomically
create or replace a file or symbolic link.")

  (let ((commit "cd5d95a43a6e21273425c7ae415d3df9ea832eeb")
for groups of goroutines working on subtasks of a common task")
and Context cancellation for groups of goroutines working on subtasks of a
common task.")

    (inherit go-golang.org-x-sync-errgroup)
    (name "go-golang.org-x-sync-semaphore")
    (synopsis "Weighted semaphore implementation in Go")
    (description "Weighted semaphore implementation in Go.")

(define (go-gotest-tools-source version sha256-base32-hash)
  (origin
    (method git-fetch)
    (uri (git-reference
    (file-name (git-file-name "go-gotest-tools" version))
    (sha256
     (base32 sha256-base32-hash))))

(define (go-gotest-tools-package suffix)
    (name (string-append "go-gotest-tools-"
     (go-gotest-tools-source version
    (synopsis "@code{gotest-tools} part")
    (description "This package provides a part of @code{gotest-tools}.")

     (list go-github-com-pkg-errors go-github-com-google-go-cmp-cmp))
    (synopsis "Formats messages for use with gotest-tools")
    (description "This package provides a way to format messages for use
with gotest-tools.")))

    (synopsis "Differences for use with gotest-tools")
    (description "This package computes differences for use
with gotest-tools.")))

     (substitute-keyword-arguments
     (list go-github-com-pkg-errors go-github-com-google-go-cmp-cmp))
    (synopsis "Source code AST formatters for gotest-tools")
    (description "This package provides source code AST formatters for
gotest-tools.")))

    (name "go-gotest-tools-assert")
    ; `(("go-gotest-tools-internal-format" ,go-gotest-tools-internal-format)))
     (list go-github-com-pkg-errors go-github-com-google-go-cmp-cmp))
    (synopsis "Compare values and fail a test when a comparison fails")
    (description "This package provides a way to compare values and fail a
test when a comparison fails.")

    (name "gotestsum")
     (list go-github-com-fatih-color
    (synopsis "Go test runner with output optimized for humans")
    (description "This package provides a @code{go test} runner with output
optimized for humans, JUnit XML for CI integration, and a summary of the
test results.")

    (name "go-github-com-golang-protobuf-proto")
    (synopsis "Go support for Protocol Buffers")
    (description "This package provides Go support for the Protocol Buffers
data serialization format.")

    (name "go-google-golang-org-protobuf")
    (synopsis "Go library for Protocol Buffers")
    (description
     "The protobuf package provides a Go implementation of Protocol Buffers, a
language and platform neutral, extensible mechanism for serializing structured
data.

This package is a successor to @code{go-github-com-golang-protobuf} with an
improved and cleaner API.")

    (name "go-github-com-macronut-go-tproxy")
    (synopsis "Linux Transparent Proxy library")
    (description
     "Golang TProxy provides an easy to use wrapper for the Linux Transparent
Proxy functionality.")

    (name "go-github-com-mattn-go-zglob")
    (synopsis "Glob library that descends into other directories")
    (description "A glob library that implements descending into other
directories.  It is optimized for filewalking.")

    (name "go-github-com-mattn-go-sqlite3")
    (synopsis "Sqlite3 driver for Go")
    (description "This package provides a Sqlite3 driver for Go using
@code{database/sql}.")

    (name "go-github-com-bits-and-blooms-bitset")
    (synopsis "Bitsets in Go")
    (description "This package provides a Go implementation of bitsets, which
are a mapping between non-negative integers and boolean values focused on
efficient space usage.")

  (deprecated-package "go-github-com-willf-bitset" go-github-com-bits-and-blooms-bitset))

    (name "go-github-com-bits-and-blooms-bloom")
     (list go-github-com-twmb-murmur3 go-github-com-bits-and-blooms-bitset))
    (synopsis "Bloom filters in Go")
    (description "This package provides a Go implementation of bloom filters,
based on murmurhash.")

  (deprecated-package "go-github-com-willf-bloom" go-github-com-bits-and-blooms-bloom))

  (let ((commit "cb7f23ec59bec0d61b19c56cd88cee3d0cc1870c")
characters with their ASCII approximations.")

  (let ((commit "e2365dfdc4a05e4b8299a783240d4a7d5a65d4e4")

    (name "go-github-com-fogleman-gg")
     (list go-github-com-golang-freetype))
    (synopsis "2D rendering in Go")
    (description "@code{gg} is a library for rendering 2D graphics in pure Go.")

  (let ((commit "16278e9db8130ac7ec405dc174cfb94344f16325")

    (name "go-github-com-klauspost-cpuid")
    (synopsis "CPU feature identification for Go")
    (description "@code{cpuid} provides information about the CPU running the
current program.  CPU features are detected on startup, and kept for fast access
through the life of the application.  Currently x86 / x64 (AMD64) is supported,
and no external C (cgo) code is used, which should make the library very eas
to use.")

  (let ((commit "974d429e7ae40c89e7dcd41cfcc22a0bfbe42510")
physical system memory accessible to the kernel.  It does not account for memory
used by other processes.")

  (let ((commit "2578deb2b95c665e6b1ebabf304ce2085c9e1985")

  (let ((commit "56e4718818e8dc4ea5ba6348402fc7661863732a")
@url{http://snowball.tartarus.org/algorithms/english/stemmer.html, english
Porter2 stemmer}.  It is written completely using finite state machines to do
suffix comparison, rather than the string-based or tree-based approaches.")

    (name "go-github-com-masterminds-goutils")
    (synopsis "Utility functions to manipulate strings")
    (description "GoUtils provides utility functions to manipulate strings in
various ways.  It is a Go implementation of some string manipulation libraries
of Java Apache Commons.")

    (name "go-github-com-masterminds-semver")
    (synopsis "@code{semver} helps to work with semantic versions")
    (description "The semver package provides the ability to work with
semantic versions.  Specifically it provides the ability to:
@itemize
@item Parse semantic versions
@item Sort semantic versions
@item Check if a semantic version fits within a set of constraints
@item Optionally work with a @code{v} prefix
@end itemize\n")

    (name "go-github-com-huandu-xstrings")
    (synopsis "Collection of string functions")
    (description "Go package xstrings is a collection of string functions,
which are widely used in other languages but absent in Go package strings.")

    (name "go-github-com-imdario-mergo")
     (list go-gopkg-in-yaml-v2))
    (synopsis "Helper to merge structs and maps in Golang")
    (description "Helper to merge structs and maps in Golang.  Useful for
configuration default values, avoiding messy if-statements.

Mergo merges same-type structs and maps by setting default values in
zero-value fields.  Mergo won't merge unexported (private) fields.  It will do
recursively any exported one.  It also won't merge structs inside
maps (because they are not addressable using Go reflection).")

    (name "go-github-com-masterminds-sprig")
     (list go-github-com-masterminds-goutils
    (synopsis "Template functions for Go templates")
    (description "Sprig is a library that provides more than 100 commonly used
template functions.")

  (let ((commit "afa1e2071829e4db655eb448d6c7c16eb0bc5766")
Slim-Sprig is a fork of Sprig that removes all external dependencies to make
the library more lightweight.")

    (name "go-github-com-bmatcuk-doublestar")
    (synopsis "Path pattern matching and globbing supporting doublestar")
    (description "@code{doublestar} is a Go implementation of path pattern
matching and globbing with support for \"doublestar\" patterns.")

    (name "go-github-com-bmizerany-perks-quantile")
    (synopsis "Library for computing quantiles")
    (description
     "Perks contains the Go package @code{quantile} that computes approximate
quantiles over an unbounded data stream within low memory and CPU bounds.")

    (name "go-github-com-dlclark-regexp2")
    (synopsis "Full featured regular expressions for Go")
    (description "Regexp2 is a feature-rich RegExp engine for Go.")

    (name "go-github-com-alecthomas-colour")
     (list go-github-com-mattn-go-isatty))
    (synopsis "Colour terminal text for Go")
    (description "Package colour provides Quake-style colour formatting for
Unix terminals.

The package level functions can be used to write to stdout (or strings or
other files).  If stdout is not a terminal, colour formatting will be
stripped.")

  (let ((commit "4184120f674c8860a5b48142509a2411a0a1766f")
can be used almost directly in Go source code.")

    (name "go-github-com-sergi-go-diff")
     (list go-github-com-stretchr-testify))
    (synopsis "Algorithms to perform operations for synchronizing plain text")
    (description "@code{go-diff} offers algorithms to perform operations required for
synchronizing plain text:
@itemize
@item compare two texts and return their differences
@item perform fuzzy matching of text
@item apply patches onto text
@end itemize\n")

    (name "go-github-com-alecthomas-chroma")
     (list go-github-com-dlclark-regexp2
    (synopsis "General purpose syntax highlighter in pure Go")
    (description "Chroma takes source code and other structured text and
converts it into syntax highlighted HTML, ANSI-coloured text, etc.")

    (name "go-github-com-muesli-reflow-wordwrap")
     (list go-github-com-mattn-go-runewidth))
    (synopsis "Collection of methods helping to transform blocks of text")
    (description "This package provides a collection of ANSI-aware methods and
io.Writers helping you to transform blocks of text.")

    (inherit go-github-com-muesli-reflow-wordwrap)
    (name "go-github-com-muesli-reflow-ansi")

    (inherit go-github-com-muesli-reflow-wordwrap)
    (name "go-github-com-muesli-reflow-indent")

    (inherit go-github-com-muesli-reflow-wordwrap)
    (name "go-github-com-muesli-reflow-padding")

    (inherit go-github-com-muesli-reflow-wordwrap)
    (name "go-github-com-muesli-reflow-truncate")

    (name "go-github-com-muesli-termenv")
     (list go-github-com-google-goterm
    (synopsis "Advanced styling options on the terminal")
    (description "termenv lets you safely use advanced styling options on the
terminal.  It gathers information about the terminal environment in terms of
its ANSI and color support and offers you convenient methods to colorize and
style your output, without you having to deal with all kinds of weird ANSI
escape sequences and color conversions.")

    (name "go-github-com-olekukonko-tablewriter")
     (list go-github-com-mattn-go-runewidth))
    (synopsis "Generate ASCII table")
    (description "This package generates ASCII tables.  Features:
@itemize
@item automatic Padding
@item support Multiple Lines
@item supports Alignment
@item support Custom Separators
@item automatic Alignment of numbers and percentage
@item write directly to http , file etc via @code{io.Writer}
@item read directly from CSV file
@item optional row line via @code{SetRowLine}
@item normalise table header
@item make CSV Headers optional
@item enable or disable table border
@item set custom footer support
@item optional identical cells merging
@item set custom caption
@item optional reflowing of paragrpahs in multi-line cells
@end itemize\n")

  (let ((commit "78ecb04241c0121483589a30b0814836a746187d")
size of the terminal.")

    (name "go-github-com-yuin-goldmark")
    (synopsis "Markdown parser")
    (description "This package provides a markdown parser.")

    (name "go-github-com-charmbracelet-glamour")
     (list go-github-com-alecthomas-chroma
    (synopsis "Write handsome command-line tools with glamour")
    (description "@code{glamour} lets you render markdown documents and
templates on ANSI compatible terminals.  You can create your own stylesheet or
use one of our glamorous default themes.")

    (name "go-github-com-charmbracelet-harmonica")
     (origin
    (synopsis "Simple, physics-based animation library")
    (description
     "A simple, efficient spring animation library for smooth, natural motion.")

    (name "go-github-com-coreos-go-semver")
    (synopsis "Semantic versioning library")
    (description "@code{go-semver} is a semantic versioning library for Go.
It lets you parse and compare two semantic version strings.")

    (name "go-github-com-coreos-go-systemd-activation")
    (synopsis "Go bindings to systemd socket activation")
    (description "Go bindings to systemd socket activation; for writing and
using socket activation from Go.")

    (name "go-github-com-emirpasic-gods")
    (synopsis "Implementation of various data structures and algorithms in Go")
    (description "This package provides implementation of various data
structures and algorithms in Go.")

    (name "go-gopkg-in-warnings")
    (synopsis "Error handling with non-fatal errors")
    (description "Package warnings implements error handling with non-fatal
errors (warnings).")

    (name "go-github-com-go-git-gcfg")
     (list go-gopkg-in-warnings go-github-com-pkg-errors))
    (synopsis "Gcfg reads INI-style configuration files into Go structs")
    (description "Gcfg reads INI-style configuration files into Go structs.")

    (name "go-github-com-go-git-go-billy")
     (list go-gopkg-in-check-v1))
    (synopsis "File system abstraction for Go")
    (description "Billy implements an interface based on the OS's standard
library to develop applications without depending on the underlying storage.
This makes it virtually free to implement mocks and testing over
file system operations.")

    (name "go-github-com-jba-printsrc")
    (synopsis "Prints Go values as sourcecode")
    (description
     "Package printsrc prints Go values as Go source.  It strives to render
legal Go source code, and returns an error when detects that it cannot.")

    (name "go-github-com-jba-templatecheck")
    (synopsis "Checks Go templates for problems")
    (description
     "Package templatecheck checks Go templates for problems.  It can detect
many errors that are normally caught only during execution.  Use templatecheck
in tests to find template errors early, and along template execution paths
that might only rarely be reached.")

  (let ((commit "d14ea06fba99483203c19d92cfcd13ebe73135f4")
extensions.")

    (name "go-github-com-juju-ansiterm")
     (origin
     (list go-gopkg-in-check-v1
    (synopsis "Writer to output ANSI escape codes for color and styles")
    (description
     "The ansiterm package provides a writer to output the ANSI escape codes
for color and styles.")

    (name "go-github-com-kevinburke-ssh-config")
    (synopsis "Parser for @file{ssh_config} files")
    (description "This is a Go parser for @file{ssh_config} files.
Importantly, this parser attempts to preserve comments in a given file, so you
can manipulate a @file{ssh_config} file from a program.")

  (let ((commit "9c5fe88206d7765837fed3732a42ef88fc51f1a1")
temporal directories.")

    (name "go-github-com-go-git-go-git-fixtures")
     (list go-github-com-alcortesm-tgz go-github-com-go-git-go-billy
    (synopsis "Fixtures used by @code{go-git}")
    (description "This package provides fixtures used by @code{go-git}.")

    (name "go-github-com-pkg-diff")
    (synopsis "Create and print diffs")
    (description
     "This package provides a Go library to create and print diffs.")

    (name "go-github-com-twpayne-go-shell")
    (synopsis "Shell across multiple platforms")
    (description
     "Package @code{shell} returns a user's shell across multiple platforms.")

    (name "go-github-com-twpayne-go-vfs")
     (list go-github-com-bmatcuk-doublestar))
    (synopsis "Abstraction of the @code{os} and @code{ioutil} Go packages")
    (description "Package @code{vfs} provides an abstraction of the @code{os}
and @code{ioutil} packages that is easy to test.")

    (name "go-github-com-twpayne-go-vfsafero")
     (list go-github-com-twpayne-go-vfs go-github-com-spf13-afero))
    (synopsis "Compatibility later between @code{go-vfs} and @code{afero}")
    (description
     "Package @code{vfsafero} provides a compatibility later between
@code{go-github-com-twpayne-go-vfs} and @code{go-github-com-spf13-afero}.")

    (name "go-github-com-twpayne-go-xdg")
     (list go-github-com-stretchr-testify go-github-com-twpayne-go-vfs))
    (synopsis "Functions related to freedesktop.org")
    (description "Package @code{xdg} provides functions related to
@uref{freedesktop.org}.")

    (name "go-github-com-xdg-go-stringprep")
     (list go-golang-org-x-text))
    (synopsis "Go implementation of RFC-3454 stringprep and RFC-4013 SASLprep")
    (description
     "Package stringprep provides data tables and algorithms for RFC-3454,
including errata.  It also provides a profile for SASLprep as defined in
RFC-4013.")

    (name "go-github-com-xdg-go-pbkdf2")
    (synopsis "Go implementation of PBKDF2")
    (description
     "Package pbkdf2 implements password-based key derivation using the PBKDF2
algorithm described in @url{https://rfc-editor.org/rfc/rfc2898.html,RFC 2898}
and @url{https://rfc-editor.org/rfc/rfc8018.html,RFC 8018}.")

    (name "go-github-com-xdg-go-scram")
     (list go-github-com-xdg-go-stringprep
    (synopsis "Go implementation of RFC-5802")
    (description
     "Package scram provides client and server implementations of the
@acronym{Salted Challenge Response Authentication Mechanism, SCRAM} described in
RFC-5802 and RFC-7677.")

    (name "go-github-com-godbus-dbus")
     (list dbus)) ;dbus-launch
    (synopsis "Native Go client bindings for the D-Bus")
    (description "@code{dbus} is a library that implements native Go client
bindings for the D-Bus message bus system.")

  (let ((commit "0e45ece1f878f202fee2c74801e287804668f677"))
extracting information about the music/image/video that is Now Playing on the
system.")

  (let ((commit "686a1e18511819b2f1625f00437f6e1246c04a5d"))
formatting information, rather than the current locale name.")

    (name "go-github-com-prometheus-common")
     (list go-github-com-golang-protobuf-proto
    (synopsis "Prometheus metrics")
    (description "This package provides tools for reading and writing
Prometheus metrics.")

    (name "go-github-com-prometheus-procfs")
    (synopsis "Go library for reading @file{/proc}")
    (description "The @code{procfs} Go package provides functions to retrieve
system, kernel, and process metrics from the @file{/proc} pseudo file system.")

    (name "go-github-com-prometheus-client-golang")
     (list go-github-com-beorn7-perks-quantile
    (synopsis "HTTP server and client tools for Prometheus")
    (description "This package @code{promhttp} provides HTTP client and
server tools for Prometheus metrics.")

    (name "go-github-com-zalando-go-keyring")
     (list go-github-com-godbus-dbus dbus))
    (synopsis "Library for working with system keyring")
    (description "@code{go-keyring} is a library for setting, getting and
deleting secrets from the system keyring.")

    (name "go-github-com-zclconf-go-cty")
     (origin
     (list go-github-com-google-go-cmp-cmp))
     (list go-golang-org-x-text
    (synopsis "Type system for dynamic values in Go applications")
    (description
     "@code{cty} (pronounced \"see-tie\") is a dynamic type system for
applications written in Go that need to represent user-supplied values without
losing type information.  The primary intended use is for implementing
configuration languages, but other uses may be possible too.")

    (name "go-etcd-io-bbolt")
     (list go-golang-org-x-sys))
    (synopsis "Low-level key/value store in Go")
    (description "This package implements a low-level key/value store in Go.")

    (name "go-github-com-bwesterb-go-ristretto")
    (synopsis "operations on the Ristretto prime-order group")
    (description "This is a pure Go implementation of the group operations on
the Ristretto prime-order group built from Edwards25519.")

    (name "go-github-com-rogpeppe-go-internal")
     (list go-github-com-pkg-diff))
    (synopsis "Internal packages from the Go standard library")
    (description "This repository factors out an opinionated selection of
internal packages and functionality from the Go standard library.  Currently
this consists mostly of packages and testing code from within the Go tool
implementation.

Included are the following:
@itemize
@item dirhash: calculate hashes over directory trees the same way that the Go tool does.
@item goproxytest: a GOPROXY implementation designed for test use.
@item gotooltest: Use the Go tool inside test scripts (see testscript below)
@item imports: list of known architectures and OSs, and support for reading import import statements.
@item modfile: read and write go.mod files while preserving formatting and comments.
@item module: module paths and versions.
@item par: do work in parallel.
@item semver: semantic version parsing.
@item testenv: information on the current testing environment.
@item testscript: script-based testing based on txtar files
@item txtar: simple text-based file archives for testing.
@end itemize\n")

    (name "go-gopkg-in-errgo-fmt-errors")
    (synopsis "Functions that use the fmt package to format error messages")
    (description "This package is the same as @code{gopkg.in/errgo.v2/errors}
except that it adds convenience functions that use the fmt package to format
error messages.")

  (let ((commit "d0c68492aca0bd4b5c5c8e0452c9b4c8af923eaf")
inspired by the causal messaging system in the Pony programming language.")

    (name "go-github-com-cheggaaa-pb-v3")
     (origin
     (list go-golang-org-x-sys
    (synopsis "Console progress bar for Go")
    (description "This package is a Go library that draws progress bars on
the terminal.")

  (deprecated-package "go-github-com-cheggaaa-pb" go-github-com-cheggaaa-pb-v3))

  ;; this is the same as v1.2.0, only the LICENSE file changed
  (let ((commit "720ba0b3ccf0a91bc6018c9967a2479f93f56a55"))
log package.  All the functionality of the built-in package still exists and
is unchanged.  This package contains a series of small enhancements and
additions.")

    (name "go-github-com-hashicorp-go-syslog")
     (origin
    (synopsis "Golang syslog wrapper, cross-compile friendly")
    (description "This package is a very simple wrapper around log/syslog")

    (name "go-golang-zx2c4-com-wireguard")
     (origin
     (list go-golang-org-x-crypto go-golang-org-x-net go-golang-org-x-sys
    (synopsis "Implementation of WireGuard in Go")
    (description "This package is a Go Implementation of WireGuard.")

    (name "go-github-com-kardianos-minwinsvc")
     (origin
    ;; some packages (Yggdrasil) need it to compile
    ;; it's a tiny package and it's easier to bundle it than to patch it out
    (synopsis "Minimal windows only service stub for Go")
    (description "Go programs designed to run from most *nix style operating
systems can import this package to enable running programs as services without
modifying them.")

    (name "go-github-com-goccy-yaml")
     (origin
     (list go-github-com-fatih-color go-golang-org-x-xerrors))
     (list go-gopkg-in-go-playground-validator-v9))
    (synopsis "YAML support for the Go language")
    (description
     "This package provides features beyond the
@uref{https://github.com/go-yaml/yaml, defacto YAML library} including:

@itemize
@item Pretty format for error notifications
@item Support Scanner or Lexer or Parser as public API
@item Support Anchor and Alias to Marshaler
@item Allow referencing elements declared in another file via anchors
@item Extract value or AST by YAMLPath (YAMLPath is like a JSONPath)
@end itemize")

  (let ((commit "1548cfb17df54d365ce9febed0677c06a40a8ceb")
parsers, and related tools.")

    (name "go-github.com-ulikunitz-xz")
    (synopsis "Read and write xz compressed streams in Go")
    (description "This package provides a library to read and write xz
compressed streams in Go.")

    (name "go-github-com-songmu-gitconfig")
     (origin
     (list go-github-com-goccy-yaml))
    (synopsis "Go library to get configuration values from gitconfig")
    (description "@{gitconfig} is a package to get configuration values from gitconfig.")

  (let ((commit "3c63b4919c769c9c2b2d07e69a98abb0eb47fe64")
sinks and sources.")

  (let ((commit "75ac54e19fdff88f4fbd82f45125134b602230b0")
or capture raw audio.")

    (name "go-github-com-pborman-getopt")
     (origin
    (synopsis "Getopt style option parsing for Go")
    (description
     "This package provides traditional getopt processing for implementing
programs that use traditional command lines.")

    (name "go-git-sr-ht-adnano-go-gemini")
     (list go-golang-org-x-net go-golang-org-x-text))
    (synopsis "Gemini protocol in Go")
    (description
     "The @code{gemini} package implements the Gemini protocol in Go.  It
provides an API similar to that of NET/HTTP to facilitate the development of
Gemini clients and servers.")

    (name "go-git-sr-ht-sircmpwn-getopt")
    (synopsis "POSIX getopt for Go")
    (description
     "This package provides a POSIX-compatible implementation of
@code{getopt} for Go.")

    (name "go-go-uber-org-atomic")
     (origin
     (list go-github-com-stretchr-testify go-github-com-davecgh-go-spew))
    (synopsis "Wrapper types for sync/atomic")
    (description
     "This package provides simple wrappers for primitive types to enforce
atomic access.")

    (name "go-go-uber-org-multierr")
     (origin
     (list go-github-com-stretchr-testify))
     (list go-go-uber-org-atomic))
    (synopsis "Error combination for Go")
    (description
     "@code{multierr} allows combining one or more Go errors together.")

    (name "gofumpt")
    (synopsis "Formats Go files with a stricter ruleset than gofmt")
    (description
     "Enforce a stricter format than @code{gofmt}, while being backwards compatible.
That is, @code{gofumpt} is happy with a subset of the formats that
@code{gofmt} is happy with.")

    (inherit gofumpt)
    (name "go-mvdan-cc-gofumpt")

    (name "unparam")
    (synopsis "Find unused parameters in Go")
    (description "Reports unused function parameters and results in Go code.")

    (inherit unparam)
    (name "go-mvdan-cc-unparam")

    (name "xurls")
    (synopsis "Extracts URLs from text")
    (description
     "Xurls extracts urls from plain text using regular expressions.  It can
be used as both a binary and a library.")

    (inherit xurls)
    (name "go-mvdan-cc-xurls")

    (name "go-go-uber-org-zap")
     (origin
     (list go-github-com-stretchr-testify go-golang-org-x-lint
     (list go-github-com-pkg-errors go-go-uber-org-atomic
    (synopsis "Logging library for Go")
    (description
     "This package provides a library for fast, structured, leveled logging in
Go.")

    (name "go-github-com-davecgh-go-xdr")
     (origin
    (synopsis "Pure Go implementation of the XDR standard")
    (description "@code{go-xdr} implements the data representation portion of
the External Data Representation (XDR) standard protocol as specified in RFC
4506 (obsoletes RFC 1832 and RFC 1014) in pure Go.")

    (name "go-github-com-dustin-go-humanize")
     (origin
    (synopsis "Humane unit formatter")
    (description "@code{go-humanize} provides formatters for units to human
friendly sizes.  It converts boring ugly numbers to human-friendly strings and
back.")

    (name "go-golang-org-x-term")
     (origin
     (list go-golang-org-x-sys))
    (synopsis "Go terminal/console support")
    (description "@code{term} provides support functions for dealing with
terminals, as commonly found on Unix systems.")

    (name "go-github-com-klauspost-compress")
     (list go-github-com-golang-snappy))
    (synopsis "Go compression library")
    (description "@code{compress} provides various compression algorithms.")

    (name "go-github-com-oneofone-xxhash")
     (origin
    (synopsis "Go implementation of xxHash")
    (description "This is a native Go implementation of the
@url{https://github.com/Cyan4973/xxHash, xxHash} algorithm, an extremely fast
non-cryptographic hash algorithm, working at speeds close to RAM limits.")

    (name "go-gopkg-in-djherbis-times-v1")
     (origin
    (synopsis "Go library for getting file times")
    (description
     "Provides a platform-independent way to get atime, mtime, ctime and btime for files.")

    (name "go-github-com-valyala-bytebufferpool")
     (origin
    (synopsis "Anti-memory-waste byte buffer pool for Golang")
    (description
     "@code{bytebufferpool} implements a pool of byte buffers with
anti-fragmentation protection.")

    (name "go-github-com-valyala-tcplisten")
     (origin
     ;; NOTE: (Sharlatan-20211218T165504+0000): Tests failing:
     ;;
     ;;   tcplisten_test.go:56: cannot create listener 0 using Config
     ;;   &tcplisten.Config{ReusePort:false, DeferAccept:false, FastOpen:false,
     ;;   Backlog:32}: lookup ip6-localhost on [::1]:53: read udp
     ;;   [::1]:33932->[::1]:53: read: connection refused
     ;;
    (synopsis "Customizable TCP net.Listener for Go")
    (description
     "@code{tcplisten} provides customizable TCP net.Listener with various
performance-related options.")

    (name "go-github-com-vmihailenco-msgpack-v4")
     (origin
     (list go-gopkg-in-check-v1))
     (list go-github-com-vmihailenco-tagparser))
    (synopsis "MessagePack encoding for Golang")
    (description
     "This package provides implementation of MessagePack encoding for Go
programming language.")

    (name "go-github-com-vmihailenco-tagparser")
     (origin
    (synopsis "Tag parser for Golang")
    (description "This package is a simple Golang implementation of tag
parser.")

    (name "go-github-com-vividcortex-ewma")
     (origin
    (synopsis "Exponentially Weighted Moving Average algorithms for Go")
    (description
     "This package implements algorithms for exponentially weighted moving
averages.")

    (name "go-github-com-rivo-uniseg")
     (origin
    (synopsis "Unicode Text Segmentation for Go")
    (description
     "This package implements Unicode Text Segmentation according to
@url{https://unicode.org/reports/tr29/, Unicode Standard Annex #29}.")

    (name "go-github-com-mattn-go-runewidth")
     (origin
     (list go-github-com-rivo-uniseg))
    (synopsis "Rune width implementation for Go")
    (description
     "This package provides functions to get the fixed width of a character or
string.")


    (name "go-github-com-charmbracelet-bubbletea")
     (origin
     `(("github.com/mattn/go-isatty" ,go-github-com-mattn-go-isatty)
    (synopsis "Powerful little TUI framework")
    (description
     "Bubble Tea is a Go framework based on The Elm Architecture.  It is
well-suited for simple and complex terminal applications, either inline,
full-window, or a mix of both.")

    (name "go-github-com-containerd-console")
     (origin
     `(("golang.org/x/sys" ,go-golang-org-x-sys)))
    (synopsis "Console package for Go")
    (description
     "This is Golang package for dealing with consoles.  It has few
dependencies and a simple API.")

    (name "go-github-com-arceliar-ironwood")
     (origin
     (list go-golang-org-x-crypto go-github-com-arceliar-phony))
    (synopsis "Experimental network routing library")
    (description
     "Ironwood is a routing library with a @code{net.PacketConn}-compatible
interface using @code{ed25519.PublicKey}s as addresses.  Basically, you use it
when you want to communicate with some other nodes in a network, but you can't
guarantee that you can directly connect to every node in that network.  It was
written to test improvements to / replace the routing logic in
@url{https://github.com/yggdrasil-network/yggdrasil-go,Yggdrasil}, but it may
be useful for other network applications.")

    (name "go-github-com-mtibben-percent")
    (synopsis "Package percent escapes strings using percent-encoding")
    (description
     "Package percent escapes strings using percent-encoding.")

  (deprecated-package "go-github-com-percent" go-github-com-mtibben-percent))

    (name "aws-vault")
     (list go-github-com-99designs-go-keyring
    (synopsis
     "Vault for securely storing and accessing AWS credentials")
    (description
     "AWS Vault is a tool to securely store and access @acronym{Amazon Web
Services,AWS} credentials.

AWS Vault stores IAM credentials in your operating system's secure keystore and
then generates temporary credentials from those to expose to your shell and
applications.  It's designed to be complementary to the AWS CLI tools, and is
aware of your profiles and configuration in ~/.aws/config.")

  (let ((commit "a6f4afe4910cad8688db3e0e9b9ac92ad22d54e1")
\"Secret Service\" DBus interface.")

  (deprecated-package "go-github-com-go-libsecret" go-github-com-gsterjov-go-libsecret))

  (let ((commit "ff02804463540c36e3a148dcf4b009d003cf2a31")
@file{/etc/resolv.conf} on Android, as described in
@url{https://github.com/golang/go/issues/8877}.")

  (deprecated-package "go-github-com-androiddnsfix" go-github-com-mtibben-androiddnsfix))

    (name "go-gopkg-in-ini")
     (list go-github.com-smartystreets-goconvey))
    (synopsis "INI file read and write functionality in Go")
    (description
     "This package provides INI file read and write functionality in Go.")

    (inherit go-gopkg-in-ini)
    (name "go-github-com-go-ini-ini")

  (let ((commit "79abb63cd66e41cb1473e26d11ebdcd68b04c8e5")
that object type.  Optionally, you can specify an application to use.  On
GNU/Linux, this is a proxy for the @command{xdg-open} command.")

    (name "go-github-com-alecthomas-kingpin")
     (list go-github-com-alecthomas-template go-github-com-alecthomas-units
    (synopsis "Go library provides utilities for building command line interfaces")
    (description
     "Go library provides utilities for building command line interfaces.")

  (deprecated-package "go-github-com-kingpin" go-github-com-alecthomas-kingpin))

  (let ((commit "a0175ee3bccc567396460bf5acd36800cb10c49c")
backslash immediately after a closing delimiter will delete all subsequent
newlines until a non-newline.")

  (let ((commit "2efee857e7cfd4f3d0138cc3cbb1b4966962b93a")

    (name "go-github-com-dreamacro-go-shadowsocks2")
     (origin
    (synopsis "Shadowsocks implementation in Go")
    (description
     "This package is @code{shadowsocks} implementation in Go

Features:
@itemize
@item SOCKS5 proxy
@item Support for Netfilter TCP redirect (IPv6 should work but not tested)
@item UDP tunneling (e.g. relay DNS packets)
@item TCP tunneling (e.g. benchmark with iperf3)
@end itemize")

    (name "go-sigs-k8s-io-yaml")
    (synopsis "YAML marshaling and unmarshaling support for Go")
    (description
     "This package provides a Go library that first converts YAML to JSON
using @code{go-yaml} and then uses @code{json.Marshal} and
@code{json.Unmarshal} to convert to or from the struct. This means that
it effectively reuses the JSON struct tags as well as the custom JSON
methods @code{MarshalJSON} and @code{UnmarshalJSON} unlike
@code{go-yaml}.

kubernetes-sigs/yaml is a permanent fork of
@url{https://github.com/ghodss/yaml,ghodss/yaml}.")

    (name "go-github-com-mitchellh-colorstring")
    (synopsis "Functions to colorize strings for terminal output")
    (description
     "Colorstring provides functions for colorizing strings for terminal output.")

    (name "go-github-com-schollz-progressbar-v3")
     (list go-golang-org-x-term
    (synopsis "Simple command-line interface (CLI) progress bar")
    (description
     "This package provides a very simple thread-safe progress bar.  The
@code{progressbar} implements an @code{io.Writer} so it can automatically
detect the number of bytes written to a stream, so you can use it as a
@code{progressbar} for an @code{io.Reader}.  When @code{progressbar}'s length
is undetermined, a customizable spinner is shown.")

    (name "go-git-sr-ht-emersion-go-scfg")
     (origin
     (list go-github-com-google-shlex
    (synopsis "Go library for simple configuration file format")
    (description "Package go-scfg parses scfg files.")

    (name "go-git-sr-ht-emersion-gqlclient")
     (origin
    (synopsis "GraphQL client and code generator")
    (description
     "This package provides a GraphQL client and code generator for Go.")

    (name "go-github-com-google-go-jsonnet")
    (synopsis "Go implementation of Jsonnet")
    (description
     "This package provides an implementation of the @url{http://jsonnet.org/,
Jsonnet} data templating language in Go.  It is a feature-complete,
production-ready implementation, compatible with the original Jsonnet C++
implementation.")

    (name "go-github-com-google-shlex")
     (origin
    (synopsis "Simple lexer for Go")
    (description
     "@code{shlex} implements a simple lexer which splits input into tokens
using shell-style rules for quoting and commenting.")

    (name "go-github-com-google-btree")
     (origin
    (synopsis "Simple, ordered, in-memory data structure for Go programs")
    (description
     "This package provides an in-memory B-Tree implementation for Go, useful as an
ordered, mutable data structure.")

    (name "go-github-com-peterbourgon-diskv")
     (origin
    (synopsis "Disk-backed key-value store")
    (description
     "Diskv (disk-vee) is a simple, persistent key-value store written in the Go
language.  It starts with a simple API for storing arbitrary data on a filesystem by
key, and builds several layers of performance-enhancing abstraction on top.  The end
result is a conceptually simple, but highly performant, disk-backed storage system.")

    (name "go-github-com-disintegration-imaging")
    (synopsis "Simple image processing for Go")
    (description "This package provides basic image processing functions
(resize, rotate, crop, brightness/contrast adjustments, etc.).")

(define notmuch-fixtures
  (origin
    (method url-fetch)
    (uri "http://notmuchmail.org/releases/test-databases/database-v1.tar.xz")
    (sha256
     (base32

    (name "go-github-com-zenhack-go-notmuch")
    (synopsis "Go bindings to libnotmuch")
    (description
     "The notmuch package provides a Go language binding to the notmuch
email library.")

    (name "go-github-com-emersion-go-message")
    (synopsis "Internet messages and MIME for Go")
    (description
     "The message package implements the Internet Message Format and Multipurpose
Internet Mail Extensions in Go.")

    (name "go-github-com-jaytaylor-html2text")
    (synopsis "Convert HTML emails to text")
    (description
     "The html2text package converts HTML emails to plain text, allowing
text-only mail clients to display them.")

    (name "go-github-com-jhillyerd-enmime")
    (synopsis "MIME encoder and decoder for Go")
    (description
     "The enmime package implements a MIME encoding and decoding
library geared towards parsing MIME encoded emails.")

    (name "go-github-com-gatherstars-com-jwz")
    (synopsis "Implementation in Go of the email threading algorithm
originally invented for Netscape Mail")
    (description
     "The jwz package provides an implementation of the email threading
algorithm originally designed for use in Netscape Mail 2.0 for Go.")

    (name "go-github-com-creack-pty")
    (synopsis "Pseudoterminal handling in Go")
    (description
     "The pty package provides functions for working with Unix pseudoterminals.")

    (name "go-github-com-riywo-loginshell")
    (synopsis "Get the user's login shell in Go")
    (description
     "The loginshell package provides a Go library to get the login shell
of the current user.")

    (name "go-github-com-rylans-getlang")
     (list go-golang-org-x-text))
     (list go-github-com-stretchr-testify))
    (synopsis "Natural language detection package in pure Go")
    (description
     "This package provides fast natural language detection in Go.")

    (name "go-github-com-kyoh86-xdg")
    (synopsis "XDG base directories for Go")
    (description
     "The xdg package provides lightweight helper functions in Go to get
config, data and cache directories according to the XDG Base Directory
Specification.")

    (name "go-github-com-ssgelm-cookiejarparser")
     (list
    (synopsis "Parse a curl cookiejar with Go")
    (description
     "This package is a Go library that parses a curl (netscape) cookiejar
file into a Go http.CookieJar.")

    (name "go-github-com-ssor-bom")
    (synopsis "Cleaning BOMs in Go")
    (description
     "The bom package provides small tools for cleaning BOMs from a byte
array or reader.")

    (name "go-github-com-gogs-chardet")
    (synopsis "Character set detection for Go")
    (description
     "The chardet package ports character set detection from
ICU to Go.")

    (name "go-github-com-go-test-deep")
    (synopsis "Human-friendly deep variable equality in Go")
    (description
     "The deep package provides the deep.Equal function which is like
reflect.DeepEqual but returns a list of differences.  This is helpful
when comparing complex types like structures and maps.")

    (name "go-github-com-niemeyer-pretty")
    (synopsis "Pretty-print Go values")
    (description
     "The pretty package provides pretty-printing for Go values.  This is
useful during debugging, to avoid wrapping long output lines in the
terminal.")

    (name "go-github-com-arran4-golang-ical")
    (synopsis "Handle iCalenders in Go")
    (description
     "The @code{ical} package provides an ICS/iCalender parser and
serialiser for Go.")

    (name "go-github-com-lithammer-fuzzysearch")
    (synopsis "Tiny and fast fuzzy search in Go")
    (description
     "A speedy fuzzy matching package for Go inspired by the JavaScript
library bevacqua/fuzzysearch.")

    (name "go-github-com-onsi-gomega")
    (synopsis "Matcher library for Ginkgo")
    (description
     "Gomega is the preferred matcher library for the Ginkgo test framework.")

